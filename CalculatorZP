import java.awt.BorderLayout;//Импортируем из стандартной графической библиотеки awt, менеджер компановки BorderLayout, располагающий компоненты по граицам и в центре объекта.
import java.awt.FlowLayout;//Импортируем из стандартной графической библиотеки awt, менеджер компановки FlowLayout, располагающий компоненты по оси х до границы объекта.
import java.awt.GridLayout;////Импортируем из стандартной графической библиотеки awt, менеджер компановки GridLayout, располагающий компоненты объекта в виде таблицы.
import javax.swing.BoxLayout;//Импортируем из стандартной графической библиотеки swing, менеджер компановки BoxLayout, располагающий компоненты по осям х и y до границы объекта.
import java.awt.Dimension;//Импортируем из стандартной графической библиотеки awt, класс Dimension инкапсулирующий длинну и ширину компонента, для того чтобы задать размер компонента.
import javax.swing.JFormattedTextField;//Импортируем из графической библиотеки swing, форматируемое текстовое поле JFormattedTextField, которое потребуется  для установки даты.
import javax.swing.BorderFactory;//Импортируем из графической библиотеки swing, класс BorderFactory при помощи которого устанавливаются границы объекта.
import javax.swing.JPanel;//Импортируем из графической библиотеки swing, класс JPanel при помощи которого создаются панели для графических компонентов.
import javax.swing.JScrollPane;//Импортируем из графической библиотеки swing, класс JScrollPane при помощи которого создается полоса прокрутки компонента.
import javax.swing.JTextField;//Импортируем из графической библиотеки swing, класс JTextField при помощи которого создаем текстовые поля.
import javax.swing.JLabel;//Импортируем из графической библиотеки swing, класс JLabel при помощи которого создаются надписи компонента.
import javax.swing.JButton;//Импортируем из графической библиотеки swing, класс JButton при помощи которого создаются кнопки компонента.
import javax.swing.JFrame;//Импортируем из графической библиотеки swing, класс JFrame при помощи которого создается окно компонента.
import javax.swing.JCheckBox;//Импортируем из графической библиотеки swing, класс JCheckBox при помощи которого создается флаговая кнопка.
import javax.swing.border.TitledBorder;//Импортируем из графической библиотеки swing, класс TitledBorder при помощи которого создаетются границы компонента с заголовком.  
import java.awt.event.ItemEvent;//Импортируем из графической библиотеки awt, ItemEvent сематическое событие которое указывает на то был ли выбран элемент.
import java.awt.event.ItemListener;//Импортируем из графической библиотеки awt, обработчик события ItemListener при помощи которого можно задать какое либо действие на нажатие CheckBox.
import java.util.Date;//Импортируем из библиотеки  Util, класс Date для обработки даты и времени. 
//Создаем класс в котором будет содержаться графическая часть калькулятора
public class CalculatorZP {
	JFrame Frame ;//Создаем окно для калькулятора
	JPanel Panel,Body,Panel1,Panel2,Panel3,Panel4,Panel5,Panel6,Panel7,Panel8,Panel9,Panel10,Panel11,Panel12,Panel13,Panel14,Panel16,Panel17,Panel18;//Создаем Панели на которых будут располагатся поля для ввода и вывода информации и кнопки-флажки для выбора расчетов.
	JFormattedTextField Int1,Int2,IllnessDayT1,IllnessDayT2;//Создаем текстовые форматируемые текстовые поля для ввода данных в калькулятор.
	JTextField HourlyT,SalaryT,PieceworkT,OvertimeT,WeekendT,ChildT,YearIT,YearIIT,ExperienceT,DistrictCoeffT,FIO ;//Создаем поля для ввода данных в калькулятор.
	JCheckBox HourlyB,SalaryB,PieceworkB,OvertimeY,OvertimeN,WeekendY,WeekendN,DistrictCoeffY,DistrictCoeffN,STDTaxationY,STDTaxationN,InvalidY,InvalidN,IllnessY,IllnessN;//Создаем флажки для выбора расчетов калькулятора.
	JLabel YearI,YearII,InterLab1,InterLab2,Illness1,Illness2;//Создаем надписи для полей ввода данных.
	JButton Start;//Создаем кнопку при нажатии которой происходит подсчет введеных данных.
	JScrollPane Scroll;//Создаем полосу прокрутки для компонентов которые непомещаются в JFrame.
	CalculatorZPEngine Eng = new CalculatorZPEngine(this);//Создаем экземпляр класса CalculatorZPEngine того чтобы использовать слушатель событий ActionListener кнопки Start и метод ActionPerformed для расчетов введенных данных. 
	//Создаем конструктор класса CalculatorZP для того чтобы при создании класса инициализировать все переменные.
	CalculatorZP(){
		Frame = new JFrame("Зарплатный калькулятор");//Определяем окно для калькулятора.
		Panel = new JPanel();//Панель на которой будут располагаться все панели для ввода данных.
		Body = new JPanel();//Панель к которой будет закреплена полоса прокрутки JScrollPane.
		Panel1 = new JPanel();//Панель для введения интервала расчетов.
		Panel2 = new JPanel();//Панель для введения формы расчета. 
		Panel3 = new JPanel();//Панель для введения данных о сверхурочной работе. 
		Panel4 = new JPanel();//Панель для введения данных о работе в выходные дни. 
		Panel5 = new JPanel();//Панель с текстовым полем для введения данных районного коефициента. 
		Panel6 = new JPanel();//Панель с 2-мя кнопками-флажками для того ,чтобы сделать видимой панель для введения значений районного коэффициента.
		Panel7 = new JPanel();// Эта панель содержит 3 панели для введения данных о налоговом вычете.
		Panel8 = new JPanel();//Панель с 2-мя кнопками-флажками для того ,чтобы при необходимости налогового вычета сделать видимой панели размещенные на Panel7 для введения данных.
		Panel9 = new JPanel();//Панель с текстовым полем для ввода данных о колличестве детей работника.
		Panel10 = new JPanel();//Панель с 2-мя кнопками-флажками для того, чтобы добавить к налоговому вычету вычет на инвалидность для работника.
		Panel11 = new JPanel();//Панель содержащая в себе панели для ввода данных больничного листа.
		Panel12 = new JPanel();//Панель для введения инициалов работника.
		Panel13 = new JPanel();//Панель введения интервала для расчета больничного листа.
		Panel14 = new JPanel();//Панель для введения средней зарплаты за последнии 2 года.
		Panel16 = new JPanel();//Панель для введения  страхового стажа. 
		Panel17 = new JPanel();//Панель с 2-мя кнопками-флажками для того, чтобы сделать видимыми панели для ввода данных больничного листа.
		Panel18 = new JPanel();//Панель содержащая кнопку для произведения расчетов по выше указанным данным.
		//Присваиваем параметры для тектовых полей отформатированных под ввод даты .
		//Присваививаем полю маску ввода даты.
		Int1 = new JFormattedTextField(Eng.dateFormatter);
		Int2 = new JFormattedTextField(Eng.dateFormatter);
		IllnessDayT1 = new JFormattedTextField(Eng.dateFormatter);
		IllnessDayT2 = new JFormattedTextField(Eng.dateFormatter);
		//Присваиваем колличество символов для текстового поля.
		Int1.setColumns(16);
		Int2.setColumns(16);
		IllnessDayT1.setColumns(16);
		IllnessDayT2.setColumns(16);
		//Присваиваем текстовому полю значение сегодняшнего дня.
		Int1.setValue(new Date()); 
		Int2.setValue(new Date());
		IllnessDayT1.setValue(new Date()); 
		IllnessDayT2.setValue(new Date()); 
		//Присваиваем текстовому выравнивание текста фпо центру.
		Int1.setHorizontalAlignment(JFormattedTextField.CENTER);
		Int2.setHorizontalAlignment(JFormattedTextField.CENTER);
		IllnessDayT1.setHorizontalAlignment(JFormattedTextField.CENTER);
		IllnessDayT2.setHorizontalAlignment(JFormattedTextField.CENTER);
		//Присваиваем размер полям.
		IllnessDayT1.setMinimumSize(new Dimension(20,10));
		IllnessDayT2.setMinimumSize(new Dimension(20,10));
		//Присваиваем параметры поля текст,колличество символов,размера поля,а также добавляем слушателя событий KeyListener, для того чтобы небыло возможности вводить иные данные кроме цифр и ".".
		//HourlyT используется для введения данных почасовой оплаты(руб./ч).
		HourlyT = new JTextField("0",10);
		HourlyT.addKeyListener(Eng.key);
		//SalaryT используется для введения данных об окладе.
		SalaryT = new JTextField("0",10);
		SalaryT.addKeyListener(Eng.key);
		//PieceworkT используется для введения данных о сдельной оплате.
		PieceworkT = new JTextField("0",10);
		PieceworkT.addKeyListener(Eng.key);
		//OvertimeT используется для введения данных о сверхурочной работе.
		OvertimeT =  new JTextField("0",18);
		OvertimeT.setMaximumSize(new Dimension(390,20));
		OvertimeT.addKeyListener(Eng.key);
		//WeekendT используется для введения данных о работе в выходные дни.
		WeekendT =  new JTextField("0",10);
		WeekendT.setMaximumSize(new Dimension(390,20));
		WeekendT.addKeyListener(Eng.key);
		//DistrictCoeffT используется для введения районного коэффициента.
		DistrictCoeffT =  new JTextField("1.15",19);
		DistrictCoeffT.setMaximumSize(new Dimension(390,20));
		DistrictCoeffT.addKeyListener(Eng.key);
		//ChildT используется для введения данных о количестве детей.
		ChildT =  new JTextField("0",18);
		ChildT.setMaximumSize(new Dimension(200,20));
		ChildT.addKeyListener(Eng.key);
		// FIO используется для введения инициалов работника.
		FIO = new JTextField() ;
		FIO.setMaximumSize(new Dimension(390,20));
		//YearIT используется для введения зарплаты работника за предпоследний год работы.
		YearIT = new JTextField("0",10);
		YearIT.addKeyListener(Eng.key);
		//YearIIT используется для введения зарплаты работника за последний год работы.
		YearIIT = new JTextField("0",10);
		YearIIT.addKeyListener(Eng.key);
		//ExperienceT используется для введения страхового стажа.
		ExperienceT = new JTextField("0",17);
		ExperienceT.addKeyListener(Eng.key);
		//Присвоение кнопкам-флажкам надписей.
		HourlyB = new JCheckBox("1.Почасовая(р/ч.)");
		SalaryB = new JCheckBox("2.Оклад(р.)");
		PieceworkB = new JCheckBox("3.Сдельная(р.)");
		OvertimeY = new JCheckBox("1.Да");
		OvertimeN = new JCheckBox("2.Нет");
		WeekendY = new JCheckBox("1.Да");
		WeekendN = new JCheckBox("2.Нет");
		DistrictCoeffY = new JCheckBox("1.Да");
		DistrictCoeffN = new JCheckBox("2.Нет");
		STDTaxationY = new JCheckBox("1.Да");
		STDTaxationN = new JCheckBox("2.Нет");
		InvalidY = new JCheckBox("1.Да");
		InvalidN = new JCheckBox("2.Нет");
		IllnessY = new JCheckBox("1.Да");
		IllnessN = new JCheckBox("2.Нет");
		IllnessY.setSize(420,20);
		IllnessN.setSize(420,20);
		//Присвоение текста для надписи JLabel.
		YearI = new JLabel("Сумма заработной платы за I год:");
		YearII = new JLabel("Сумма заработной платы за II год:");
		InterLab1 = new JLabel(" c:");
		InterLab2 = new JLabel(" по:");
		Illness1 = new JLabel("c:");
		Illness2= new JLabel("по:");
		Start = new JButton("Расчитать");//Присвоение кнопке Start названия.
		Scroll = new JScrollPane(Panel);//Добавление JScrollPane к панили Panel.
Body.setLayout(new BorderLayout());//Добавление для панели Body менеджера размещения.
		Body.add(Scroll,BorderLayout.CENTER);//Добавление полосы прокрутки на панель Body
		Panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 5,10));//Создание невидимой рамки для панели Panel, чтобы задать отступ.
		Panel.setLayout(new BoxLayout(Panel, BoxLayout.Y_AXIS));//Добавление менеджера размещения по оси Y для панели Panel.
		//Добавление на главную панель Panel, панелей для ввода данных.
		Panel.add(Panel12);
		Panel.add(Panel1);
		Panel.add(Panel2);
		Panel.add(Panel3);
		Panel.add(Panel4);
		Panel.add(Panel5);
		Panel.add(Panel7);
		Panel.add(Panel11);
		Panel.add(Panel18);
		//Задание параметров для панелей таких как максимальный размер,заголовок,менеджер размещения элементов,выравнивание,а также добавление элементов.
		//Panel1 используеться для отображения поля ввода интервала расчетов.
		Panel1.setMaximumSize(new Dimension(420,60));
		Panel1.setBorder(new TitledBorder("Интервал Расчета:"));
		Panel1.setLayout(new FlowLayout(FlowLayout.LEFT,2,10));
		Panel1.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel1.add(InterLab1);
		Panel1.add(Int1);
		Panel1.add(InterLab2);
		Panel1.add(Int2);
		//Рanel2 используеться для отображения поля ввода формы расчетов(Повременная,Оклад,Сдельная) .
		Panel2.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel2.setMaximumSize(new Dimension(420,90));
		Panel2.setBorder(BorderFactory.createTitledBorder("Форма расчета:"));
		Panel2.setLayout(new GridLayout(3,3,1,1));
		Panel2.add(HourlyB);
		Panel2.add(HourlyT);
		Panel2.add(SalaryB);
		Panel2.add(SalaryT);
		Panel2.add(PieceworkB);
		Panel2.add(PieceworkT);
		//Рanel3 используеться для отображения поля ввода часов работы сверхурочно. 
		Panel3.setLayout(new BoxLayout(Panel3, BoxLayout.Y_AXIS));
		Panel3.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel3.setMaximumSize(new Dimension(420,91));
		Panel3.setBorder(BorderFactory.createTitledBorder("Работа в сверхурочное время(ч.):"));
		Panel3.add(OvertimeY);
		Panel3.add(OvertimeN);
		Panel3.add(OvertimeT);
		//Panel4 исполюзуеться для отображения поля ввода часов работы в выходные дни. 
		Panel4.setLayout(new BoxLayout(Panel4, BoxLayout.Y_AXIS));
		Panel4.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel4.setMaximumSize(new Dimension(420,91));
		Panel4.setBorder(BorderFactory. createTitledBorder("Работа в выходны дни(ч.):"));
		Panel4.add(WeekendY);
		Panel4.add(WeekendN);
		Panel4.add(WeekendT);
		//Рanel5 исполюзуеться для отображения поля ввода районного коэффициента. 
		Panel5.setLayout(new BoxLayout(Panel5, BoxLayout.Y_AXIS));
		Panel5.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel5.setMaximumSize(new Dimension(420,115));
		Panel5.setBorder(BorderFactory.createTitledBorder("Районный коэффициент:"));
		Panel5.add(Panel6);
		Panel5.add(DistrictCoeffT);
		//Рanel6 исполюзуеться для того чтобы при необходимости изменения районного коэффициента сделать текстовое поле DistrictCoeffT редактируемым. 
		Panel6.setLayout(new BoxLayout(Panel6, BoxLayout.Y_AXIS));
		Panel6.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel6.setMaximumSize(new Dimension(410,80));
		Panel6.setBorder(BorderFactory.createTitledBorder("Изменить районный коэффициент?"));
		Panel6.add(DistrictCoeffY);
		Panel6.add(DistrictCoeffN);
		//Рanel7 Используется для отображения панелей для ввода данных о налоговом вычете.
		Panel7.setLayout(new BoxLayout(Panel7,BoxLayout.Y_AXIS));
		Panel7.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel7.setBorder(BorderFactory.createTitledBorder("Налоговый вычет:"));
		Panel7.add(Panel8);
		Panel7.add(Panel9);
		Panel7.add(Panel10);
		//Panel8 Используется для того чтобы при необходимости добавить данные о налоговом вычете в расчеты.
		Panel8.setLayout(new BoxLayout(Panel8,BoxLayout.Y_AXIS));
		Panel8.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel8.setMaximumSize(new Dimension(410,70));
		Panel8.setBorder(BorderFactory.createTitledBorder("Есть ли налоговый вычет?"));
		Panel8.add(STDTaxationY);
		Panel8.add(STDTaxationN);
		//Panel9 Исполюзуется для отображения текстового поля ChildT и введения в него данных.
		Panel9.setLayout(new BoxLayout(Panel9,BoxLayout.X_AXIS));
		Panel9.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel9.setMaximumSize(new Dimension(410,60));
		Panel9.setBorder(BorderFactory.createTitledBorder("Колличество детей работника:"));
		Panel9.add(ChildT);
		//Рanel10 Используется для отображения кнопок-флажков при помощи которых определяется Являеться ли работник инвалидом I или II группы.
		Panel10.setLayout(new BoxLayout(Panel10,BoxLayout.Y_AXIS));
		Panel10.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel10.setMaximumSize(new Dimension(410,70));
		Panel10.setBorder(BorderFactory.createTitledBorder("Являеться ли работник инвалидом I или II группы ?"));
		Panel10.add(InvalidY);
		Panel10.add(InvalidN);	
		//Рanel11 Используется для отображения панелей для ввода данных о больничном пособии работника.
		Panel11.setLayout(new BoxLayout(Panel11,BoxLayout.Y_AXIS));
		Panel11.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel11.setBorder(BorderFactory.createTitledBorder("Больничное пособие"));
		Panel11.add(Panel17);
		Panel11.add(Panel13);
		Panel11.add(Panel14);
		Panel11.add(Panel16);
		//Panel12 Используеться для отображения текстового поля FIO.
		Panel12.setLayout(new BoxLayout(Panel12, BoxLayout.Y_AXIS));
		Panel12.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel12.setMaximumSize(new Dimension(420,45));
		Panel12.setBorder(BorderFactory.createTitledBorder("Фамилия и инициалы работника:"));
		Panel12.add(FIO);
		//Panel13 Используется для отображения надписей и текстовых полей для интерала больничного пособия.
		Panel13.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel13.setBorder(BorderFactory.createTitledBorder("Дни болезни:"));				
		Panel13.setLayout(new FlowLayout(FlowLayout.LEFT,2,10));
		Panel13.setMaximumSize(new Dimension(410,60));
		Panel13.add(Illness1);
		Panel13.add(IllnessDayT1);
		Panel13.add(Illness2);
		Panel13.add(IllnessDayT2);
		//Panel14 Используется для отображения текстовых полей и надписей для ввода заплаты за 2 последних года.
		Panel14.setMaximumSize(new Dimension(410,60));
		Panel14.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel14.setBorder(BorderFactory.createTitledBorder("Средняя заработная плата:"));
		Panel14.setLayout(new GridLayout(2,2,1,1));
		Panel14.add(YearI);
		Panel14.add(YearIT);
		Panel14.add(YearII);
		Panel14.add(YearIIT);
		//Panel16 Используется для отображения текстового поля ввода страхового стажа.
		Panel16.setLayout(new FlowLayout(FlowLayout.LEFT,2,10));
		Panel16.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel16.setBorder(BorderFactory.createTitledBorder("Страховой стаж:"));
		Panel16.setMaximumSize(new Dimension(410,60));
		Panel16.add(ExperienceT);
		//Panel17 Используется для отображения кнопок-флажков при помощи которых определяется расчитывать больничное пособие или нет.  
		Panel17.setLayout(new BoxLayout(Panel17,BoxLayout.Y_AXIS));
		Panel17.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel17.setMaximumSize(new Dimension(410,70));
		Panel17.setBorder(BorderFactory.createTitledBorder("Расчитать больничное пособие?"));
		Panel17.add(IllnessY);
		Panel17.add(IllnessN);
		//Panel18 Используется для отображения кнопки Start.
		Panel18.setMaximumSize(new Dimension(420,60));
		Panel18.setLayout(new FlowLayout(FlowLayout.LEFT,2,5));
		Panel18.setAlignmentX(JPanel.CENTER_ALIGNMENT);
		Panel18.add(Start);
		//Задаем параметры для окна
		Frame.setContentPane(Body);//Добавляем панель Body на фрейм
		Frame.setSize(485, 620);//Задаем размер фрейма.
		Frame.setLocationRelativeTo(null);//Задаем место расположения окна(центер экрана).
		Frame.setVisible(true);//Определяем окно как видимое.
		//Определяем текстовые поля и элементы как скрытые.
		OvertimeT.setEnabled(false);
		WeekendT.setEnabled(false);
		DistrictCoeffT.setEnabled(false);
		Panel4.setVisible(false);
		Panel3.setVisible(false);
		Panel9.setVisible(false);
		Panel10.setVisible(false);
		Panel13.setVisible(false);
		Panel14.setVisible(false);
		Panel16.setVisible(false);
		HourlyT.setEnabled(false);
		SalaryT.setEnabled(false);
		PieceworkT.setEnabled(false);
